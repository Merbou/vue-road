{"version":3,"file":"index.js","sources":["../src/middleware.js","../src/index.js"],"sourcesContent":["export default class middleware {\r\n\r\n    constructor({router, middlewares,route}) {\r\n\r\n        if (!middlewares||!route) return;\r\n        this.middlewares = middlewares\r\n        this.route = route\r\n\r\n        router.beforeEach((to, from, next) => {\r\n            this.standrad({ to, from, next }, \"before\")\r\n        })\r\n\r\n        router.afterEach((to, from) => {\r\n            this.standrad({ to, from }, \"after\")\r\n        })\r\n\r\n    }\r\n\r\n    standrad({ to, from, next }, doctrine) {\r\n        let _ro_ms = this.route.get(true)\r\n            .filter(e => e.routes.findIndex(e => e.path === to.path.split(\"/\").slice(0, 2).join(\"/\")) > -1)\r\n            .flatMap(e => e.middlewares)\r\n\r\n        _ro_ms.forEach(_ro_m => {\r\n            if (Object.keys(this.middlewares).indexOf(_ro_m) > -1 && this.middlewares[_ro_m][doctrine])\r\n                if (doctrine == \"before\")\r\n                    this.middlewares[_ro_m][doctrine]({ to, from })\r\n                        .then(res => {\r\n                            if (res === to.path) next()\r\n                            else\r\n                                res ? next(res) : next()\r\n                        })\r\n                        .catch(code => {\r\n\r\n                            if (res === to.path) next()\r\n                            else\r\n                                next(code)\r\n                        })\r\n                else\r\n                    this.middlewares[_ro_m][doctrine]({ to, from })\r\n\r\n        })\r\n    }\r\n\r\n\r\n}","import midd from \"./middleware\";\r\n//_w : way\r\n//_ro : route\r\n//_rs : routes\r\n//_rs_mds : routes_middleswares\r\nexport default class {\r\n    constructor($callback, customRouteCase) {\r\n        this.customRouteCase = customRouteCase\r\n        this._rs_mds = [];\r\n        this.ROUTES = [];\r\n        //callback with this object\r\n        $callback.call(this);\r\n    }\r\n\r\n\r\n    middleware({ router, middlewares }) {\r\n        new midd({ router, middlewares, route: this })\r\n        return this\r\n    }\r\n    /**\r\n     * assignment all routes to attribut _ro \r\n     * \r\n     * @param {Array} _rs \r\n     * @param {String} middleware \r\n     */\r\n    route(_rs, middleware) {\r\n        let middlewares = this.splitMiddleware(middleware)\r\n        //assignment a routes with middlewares index to ROUTES array\r\n        this.ROUTES.push({ routes: _rs, middlewares })\r\n\r\n        //Handle each route customRouteCase is callback \r\n        let _rs_temp = this.customRouteCase ? this.customRouteCase(_rs.map(_r => { return { ..._r } })) : _rs\r\n        //assignment a routes with middlewares index to _ro array\r\n        this._rs_mds.push({ routes: _rs_temp, middlewares });\r\n        return _rs_temp\r\n    }\r\n\r\n    splitMiddleware(middleware) {\r\n        try {\r\n            if (Array.isArray(middleware)) return middleware\r\n            if (typeof middleware === \"string\") return middleware.split(\",\")\r\n            throw \"middleware not valid\"\r\n        } catch (error) {\r\n            return [\"init\"]\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * get middleswars from routes\r\n     */\r\n    getMiddlewares() {\r\n        return [...new Set(this.ROUTES.flatMap(_rs => _rs.middlewares))]\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Boolean} with_midd \r\n     * @param {String|Array} middlewares \r\n     * return routes after treatments according to middleware\r\n     */\r\n    get(with_midd, middlewares) {\r\n        return this.fiflater(this._rs_mds, with_midd, middlewares)\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Boolean} with_midd \r\n     * @param {String|Array} middlewares \r\n     * return routes before treatments according to middleware\r\n     */\r\n\r\n    constant(with_midd, middlewares) {\r\n        return this.fiflater(this.ROUTES, with_midd, middlewares)\r\n    }\r\n\r\n\r\n\r\n    fiflater(routes, with_midd, middlewares) {\r\n\r\n        let res\r\n        if (!middlewares) res = routes\r\n\r\n        else {\r\n            middlewares = Array.isArray(middlewares) ? middlewares : [middlewares]\r\n            res = routes && routes.\r\n                filter(_r => _r.middlewares.filter(_m => middlewares.indexOf(_m) > -1).length)\r\n        }\r\n        if (!with_midd) return res && res.flatMap(_r => _r.routes) || []\r\n        return res\r\n    }\r\n}\r\n\r\n\r\n"],"names":["middleware","router","middlewares","route","beforeEach","to","from","next","_this","standrad","afterEach","doctrine","this","get","filter","e","routes","findIndex","path","split","slice","join","flatMap","forEach","_ro_m","Object","keys","_this2","indexOf","then","res","code","$callback","customRouteCase","_rs_mds","ROUTES","call","midd","_rs","splitMiddleware","push","_rs_temp","map","_r","Array","isArray","error","Set","with_midd","fiflater","_m","length"],"mappings":";;;;;wjCAAqBA,sCAEJC,IAAAA,OAAQC,IAAAA,YAAYC,IAAAA,gBAExBD,GAAcC,SACdD,YAAcA,OACdC,MAAQA,EAEbF,EAAOG,YAAW,SAACC,EAAIC,EAAMC,GACzBC,EAAKC,SAAS,CAAEJ,GAAAA,EAAIC,KAAAA,EAAMC,KAAAA,GAAQ,aAGtCN,EAAOS,WAAU,SAACL,EAAIC,GAClBE,EAAKC,SAAS,CAAEJ,GAAAA,EAAIC,KAAAA,GAAQ,0DAKPK,cAAlBN,IAAAA,GAAIC,IAAAA,KAAMC,IAAAA,KACJK,KAAKT,MAAMU,KAAI,GACvBC,QAAO,SAAAC,UAAKA,EAAEC,OAAOC,WAAU,SAAAF,UAAKA,EAAEG,OAASb,EAAGa,KAAKC,MAAM,KAAKC,MAAM,EAAG,GAAGC,KAAK,SAAS,KAC5FC,SAAQ,SAAAP,UAAKA,EAAEb,eAEbqB,SAAQ,SAAAC,GACPC,OAAOC,KAAKC,EAAKzB,aAAa0B,QAAQJ,IAAU,GAAKG,EAAKzB,YAAYsB,GAAOb,KAC7D,UAAZA,EACAgB,EAAKzB,YAAYsB,GAAOb,GAAU,CAAEN,GAAAA,EAAIC,KAAAA,IACnCuB,MAAK,SAAAC,GACEA,IAAQzB,EAAGa,KAAMX,IAEjBuB,EAAMvB,EAAKuB,GAAOvB,cAEnB,SAAAwB,GAECD,MAAQzB,EAAGa,KAAMX,IAEjBA,EAAKwB,MAGjBJ,EAAKzB,YAAYsB,GAAOb,GAAU,CAAEN,GAAAA,EAAIC,KAAAA,yCCjC5C0B,EAAWC,kBACdA,gBAAkBA,OAClBC,QAAU,QACVC,OAAS,GAEdH,EAAUI,KAAKxB,0DAINX,IAAAA,OAAQC,IAAAA,uBACbmC,EAAK,CAAEpC,OAAAA,EAAQC,YAAAA,EAAaC,MAAOS,OAChCA,mCAQL0B,EAAKtC,OACHE,EAAcU,KAAK2B,gBAAgBvC,QAElCmC,OAAOK,KAAK,CAAExB,OAAQsB,EAAKpC,YAAAA,QAG5BuC,EAAW7B,KAAKqB,gBAAkBrB,KAAKqB,gBAAgBK,EAAII,KAAI,SAAAC,2BAAoBA,OAAWL,cAE7FJ,QAAQM,KAAK,CAAExB,OAAQyB,EAAUvC,YAAAA,IAC/BuC,0CAGKzC,UAEJ4C,MAAMC,QAAQ7C,GAAa,OAAOA,KACZ,iBAAfA,EAAyB,OAAOA,EAAWmB,MAAM,UACtD,uBACR,MAAO2B,SACE,CAAC,2DASD,IAAIC,IAAInC,KAAKuB,OAAOb,SAAQ,SAAAgB,UAAOA,EAAIpC,6CASlD8C,EAAW9C,UACJU,KAAKqC,SAASrC,KAAKsB,QAASc,EAAW9C,oCAUzC8C,EAAW9C,UACTU,KAAKqC,SAASrC,KAAKuB,OAAQa,EAAW9C,oCAKxCc,EAAQgC,EAAW9C,OAEpB4B,SACC5B,GAGDA,EAAc0C,MAAMC,QAAQ3C,GAAeA,EAAc,CAACA,GAC1D4B,EAAMd,GAAUA,EACZF,QAAO,SAAA6B,UAAMA,EAAGzC,YAAYY,QAAO,SAAAoC,UAAMhD,EAAY0B,QAAQsB,IAAO,KAAGC,WAL7DrB,EAAMd,EAOnBgC,EACElB,EADgBA,GAAOA,EAAIR,SAAQ,SAAAqB,UAAMA,EAAG3B,WAAW"}